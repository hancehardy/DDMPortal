// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
}

model Order {
  id              String     @id @default(uuid())
  company         String
  contact         String
  address         String
  phone           String
  email           String
  jobName         String
  doorStyle       String
  manufacturer    String
  color           String
  measurementUnit String
  quoteOrOrder    String
  poNumber        String
  orderDate       DateTime   @default(now())
  status          String     @default("Draft")
  totalItems      Int?
  totalSqFt       Float?
  totalPrice      Float?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  items           OrderItem[]
  user            User       @relation(fields: [userId], references: [id])
  userId          String
}

model OrderItem {
  id         String  @id @default(uuid())
  qty        Int
  width      Float
  height     Float
  centerRail Boolean
  glass      Boolean
  glassType  String?
  notes      String?
  order      Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId    String
}

model DoorStyle {
  id        String   @id @default(uuid())
  name      String   @unique
  available Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Finish {
  id           String   @id @default(uuid())
  name         String
  manufacturer String
  sqftPrice    Float
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([name, manufacturer])
}

model GlassType {
  id          String   @id @default(uuid())
  name        String   @unique
  sqftPrice   Float
  sqftMinimum Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SizeParameter {
  id        String   @id @default(uuid())
  name      String   @unique
  inches    Float
  mm        Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Manufacturer {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
